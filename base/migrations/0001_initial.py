# Generated by Django 4.1.7 on 2024-04-30 15:08

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('STUDENT', 'Student'), ('TEACHER', 'Teacher')], default='ADMIN', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Learning Development Class', 'Learning Development Class'), ('Nursery 1', 'Nursery 1'), ('Nursery 2', 'Nursery 2'), ('Nursery 3', 'Nursery 3'), ('Primary 1', 'Primary 1'), ('Primary 2', 'Primary 2'), ('Primary 3', 'Primary 3'), ('Primary 4', 'Primary 4'), ('Primary 5', 'Primary 5'), ('Primary 6', 'Primary 6'), ('Primary 7', 'Primary 7'), ('Primary 8', 'Primary 8'), ('Primary 9', 'Primary 9')], max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Class',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='event')),
                ('date', models.DateField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='images')),
                ('title', models.CharField(blank=True, max_length=30, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name_plural': 'Items',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Results',
            },
        ),
        migrations.CreateModel(
            name='SchoolPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='school_gallery')),
                ('date', models.DateField(blank=True, null=True)),
                ('discription', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'School Photos',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('first term', 'FIRST TERM'), ('second term', 'SECOND TERM'), ('third term', 'THIRD TERM')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('temporary_residence', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_residence', models.CharField(blank=True, max_length=255, null=True)),
                ('state_of_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('city_or_town', models.TextField(blank=True, max_length=255, null=True)),
                ('sex', models.CharField(blank=True, choices=[('male', 'MALE'), ('female', 'FEMALE')], max_length=50, null=True)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('teacher_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, choices=[('christian', 'CHRISTIAN'), ('muslim', 'MUSLIM'), ('others', 'OTHERS')], max_length=30, null=True)),
                ('disability', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=20, null=True)),
                ('maritial_status', models.CharField(blank=True, choices=[('married', 'MARRIED'), ('single', 'SINGLE')], max_length=20, null=True)),
                ('years_of_experience', models.CharField(blank=True, max_length=50, null=True)),
                ('computer_skills', models.CharField(blank=True, choices=[('yes', 'YES'), ('no', 'NO')], max_length=20, null=True)),
                ('disability_note', models.TextField(blank=True, null=True)),
                ('passport', models.ImageField(null=True, upload_to='teachers_passport')),
                ('cv', models.ImageField(null=True, upload_to="cv's")),
                ('flsc', models.ImageField(null=True, upload_to='teacher_documents')),
                ('waec_neco_nabteb_gce', models.ImageField(null=True, upload_to='teacher_documents')),
                ('secondary_school_transcript', models.ImageField(null=True, upload_to='teacher_documents')),
                ('university_polytech_institution_cer', models.ImageField(null=True, upload_to='teacher_documents')),
                ('university_polytech_institution_cer_trans', models.ImageField(null=True, upload_to='teacher_documents')),
                ('other_certificate', models.ImageField(null=True, upload_to='other_certificate')),
                ('teacher_speech', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Teachers',
            },
            bases=('base.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubjectResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_ca', models.FloatField(blank=True, null=True, verbose_name='Total C.A. Score (40%)')),
                ('exam', models.FloatField(blank=True, null=True, verbose_name='EXAM (60%)')),
                ('total', models.FloatField(blank=True, null=True, verbose_name='TOTAL (100%)')),
                ('grade', models.CharField(blank=True, max_length=10, null=True)),
                ('position', models.CharField(blank=True, max_length=10, null=True)),
                ('result', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='base.result')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.subject')),
            ],
            options={
                'verbose_name_plural': 'Subject Results',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('term', models.ManyToManyField(related_name='terms', to='base.term')),
            ],
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('scheme', models.FileField(upload_to='')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.session')),
                ('student_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.class')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.subject')),
                ('term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.term')),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.session'),
        ),
        migrations.AddField(
            model_name='result',
            name='student_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.class'),
        ),
        migrations.AddField(
            model_name='result',
            name='subjects',
            field=models.ManyToManyField(through='base.SubjectResult', to='base.subject'),
        ),
        migrations.AddField(
            model_name='result',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.term'),
        ),
        migrations.AddField(
            model_name='class',
            name='subjects',
            field=models.ManyToManyField(related_name='classes', to='base.subject'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('sex', models.CharField(blank=True, choices=[('male', 'MALE'), ('female', 'FEMALE')], max_length=50, null=True)),
                ('father_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mother_name', models.CharField(blank=True, max_length=255, null=True)),
                ('gurdian_name', models.CharField(blank=True, max_length=255, null=True)),
                ('parents_phone_number', models.IntegerField(blank=True, null=True)),
                ('parents_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('state_of_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(choices=[('christian', 'CHRISTIAN'), ('muslim', 'MUSLIM'), ('others', 'OTHERS')], max_length=30)),
                ('disability', models.CharField(choices=[('yes', 'YES'), ('no', 'NO')], max_length=20)),
                ('disability_note', models.TextField(blank=True, null=True)),
                ('city_or_town', models.CharField(blank=True, max_length=255, null=True)),
                ('previous_school', models.CharField(blank=True, max_length=255, null=True)),
                ('passport', models.ImageField(null=True, upload_to='student_passport')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('student_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.class')),
            ],
            options={
                'verbose_name_plural': 'Students',
            },
            bases=('base.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='result',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.student'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('teacher_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.teacher')),
            ],
        ),
    ]
